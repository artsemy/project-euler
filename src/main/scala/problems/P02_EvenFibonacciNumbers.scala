package problems

import scala.annotation.tailrec

/*
  Each new term in the Fibonacci sequence is generated by adding the previous two terms.
  By starting with 1 and 2, the first 10 terms will be:

  1, 2, 3, 5, 8, 13, 21, 34, 55, 89, ...

  By considering the terms in the Fibonacci sequence whose values do not exceed four million,
  find the sum of the even-valued terms.

  https://projecteuler.net/problem=2
*/

object P02_EvenFibonacciNumbers:

  def countSum(upperBorder: Int): Int =

    def check(i: Int): Int =
      if i % 2 == 0 then
        i
      else
        0

    @tailrec
    def fib(f1: Int, f2: Int, acc: Int): Int =
      if f2 > upperBorder then
        acc
      else
        fib(f2, f1 + f2, acc + check(f2))

    fib(1, 2, 0)
